--liquibase formatted sql

--changeset admin:003-add-reference-data
--comment: Add reference data for task status, priorities, and roles

-- Insert standard task statuses
INSERT INTO ADMIN.TASKS (TASKID, PROJECTID, SPRINTID, TITLE, STATUS, CREATED_BY) 
SELECT SYS_GUID(), NULL, NULL, 'REFERENCE_STATUS_' || STATUS_NAME, STATUS_NAME, 'SYSTEM' 
FROM (
    SELECT 'TODO' AS STATUS_NAME FROM DUAL UNION ALL
    SELECT 'IN_PROGRESS' FROM DUAL UNION ALL
    SELECT 'IN_REVIEW' FROM DUAL UNION ALL
    SELECT 'TESTING' FROM DUAL UNION ALL
    SELECT 'DONE' FROM DUAL UNION ALL
    SELECT 'BLOCKED' FROM DUAL UNION ALL
    SELECT 'CANCELLED' FROM DUAL
);

-- Actually, let's create proper lookup tables instead
-- Create TASK_STATUS lookup table
CREATE TABLE ADMIN.TASK_STATUS (
    STATUS_ID RAW(16) DEFAULT SYS_GUID(),
    STATUS_CODE VARCHAR2(50) NOT NULL UNIQUE,
    STATUS_NAME VARCHAR2(100) NOT NULL,
    STATUS_ORDER NUMBER(3) DEFAULT 1,
    IS_ACTIVE CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y','N')),
    CREATED_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50)
) TABLESPACE DATA LOGGING;

ALTER TABLE ADMIN.TASK_STATUS ADD PRIMARY KEY (STATUS_ID) USING INDEX LOGGING;

-- Insert task statuses
INSERT INTO ADMIN.TASK_STATUS (STATUS_CODE, STATUS_NAME, STATUS_ORDER, CREATED_BY) VALUES
('TODO', 'To Do', 1, 'SYSTEM');
INSERT INTO ADMIN.TASK_STATUS (STATUS_CODE, STATUS_NAME, STATUS_ORDER, CREATED_BY) VALUES
('IN_PROGRESS', 'In Progress', 2, 'SYSTEM');
INSERT INTO ADMIN.TASK_STATUS (STATUS_CODE, STATUS_NAME, STATUS_ORDER, CREATED_BY) VALUES
('IN_REVIEW', 'In Review', 3, 'SYSTEM');
INSERT INTO ADMIN.TASK_STATUS (STATUS_CODE, STATUS_NAME, STATUS_ORDER, CREATED_BY) VALUES
('TESTING', 'Testing', 4, 'SYSTEM');
INSERT INTO ADMIN.TASK_STATUS (STATUS_CODE, STATUS_NAME, STATUS_ORDER, CREATED_BY) VALUES
('DONE', 'Done', 5, 'SYSTEM');
INSERT INTO ADMIN.TASK_STATUS (STATUS_CODE, STATUS_NAME, STATUS_ORDER, CREATED_BY) VALUES
('BLOCKED', 'Blocked', 6, 'SYSTEM');
INSERT INTO ADMIN.TASK_STATUS (STATUS_CODE, STATUS_NAME, STATUS_ORDER, CREATED_BY) VALUES
('CANCELLED', 'Cancelled', 7, 'SYSTEM');

-- Create PRIORITY lookup table
CREATE TABLE ADMIN.PRIORITY (
    PRIORITY_ID RAW(16) DEFAULT SYS_GUID(),
    PRIORITY_CODE VARCHAR2(20) NOT NULL UNIQUE,
    PRIORITY_NAME VARCHAR2(50) NOT NULL,
    PRIORITY_LEVEL NUMBER(1) NOT NULL,
    IS_ACTIVE CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y','N')),
    CREATED_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50)
) TABLESPACE DATA LOGGING;

ALTER TABLE ADMIN.PRIORITY ADD PRIMARY KEY (PRIORITY_ID) USING INDEX LOGGING;

-- Insert priorities
INSERT INTO ADMIN.PRIORITY (PRIORITY_CODE, PRIORITY_NAME, PRIORITY_LEVEL, CREATED_BY) VALUES
('LOW', 'Low Priority', 1, 'SYSTEM');
INSERT INTO ADMIN.PRIORITY (PRIORITY_CODE, PRIORITY_NAME, PRIORITY_LEVEL, CREATED_BY) VALUES
('MEDIUM', 'Medium Priority', 2, 'SYSTEM');
INSERT INTO ADMIN.PRIORITY (PRIORITY_CODE, PRIORITY_NAME, PRIORITY_LEVEL, CREATED_BY) VALUES
('HIGH', 'High Priority', 3, 'SYSTEM');
INSERT INTO ADMIN.PRIORITY (PRIORITY_CODE, PRIORITY_NAME, PRIORITY_LEVEL, CREATED_BY) VALUES
('CRITICAL', 'Critical Priority', 4, 'SYSTEM');

-- Create ROLE lookup table for project members
CREATE TABLE ADMIN.PROJECT_ROLES (
    ROLE_ID RAW(16) DEFAULT SYS_GUID(),
    ROLE_CODE VARCHAR2(50) NOT NULL UNIQUE,
    ROLE_NAME VARCHAR2(100) NOT NULL,
    ROLE_DESCRIPTION VARCHAR2(500),
    IS_ACTIVE CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y','N')),
    CREATED_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50)
) TABLESPACE DATA LOGGING;

ALTER TABLE ADMIN.PROJECT_ROLES ADD PRIMARY KEY (ROLE_ID) USING INDEX LOGGING;

-- Insert project roles
INSERT INTO ADMIN.PROJECT_ROLES (ROLE_CODE, ROLE_NAME, ROLE_DESCRIPTION, CREATED_BY) VALUES
('PROJECT_MANAGER', 'Project Manager', 'Responsible for overall project coordination and delivery', 'SYSTEM');
INSERT INTO ADMIN.PROJECT_ROLES (ROLE_CODE, ROLE_NAME, ROLE_DESCRIPTION, CREATED_BY) VALUES
('TEAM_LEAD', 'Team Lead', 'Technical lead for a specific team within the project', 'SYSTEM');
INSERT INTO ADMIN.PROJECT_ROLES (ROLE_CODE, ROLE_NAME, ROLE_DESCRIPTION, CREATED_BY) VALUES
('DEVELOPER', 'Developer', 'Software developer working on project tasks', 'SYSTEM');
INSERT INTO ADMIN.PROJECT_ROLES (ROLE_CODE, ROLE_NAME, ROLE_DESCRIPTION, CREATED_BY) VALUES
('QA_TESTER', 'QA Tester', 'Quality assurance tester', 'SYSTEM');
INSERT INTO ADMIN.PROJECT_ROLES (ROLE_CODE, ROLE_NAME, ROLE_DESCRIPTION, CREATED_BY) VALUES
('BUSINESS_ANALYST', 'Business Analyst', 'Analyzes business requirements', 'SYSTEM');
INSERT INTO ADMIN.PROJECT_ROLES (ROLE_CODE, ROLE_NAME, ROLE_DESCRIPTION, CREATED_BY) VALUES
('STAKEHOLDER', 'Stakeholder', 'Project stakeholder with review access', 'SYSTEM');

-- Create indexes for performance
CREATE INDEX IDX_TASK_STATUS_CODE ON ADMIN.TASK_STATUS(STATUS_CODE);
CREATE INDEX IDX_PRIORITY_CODE ON ADMIN.PRIORITY(PRIORITY_CODE);
CREATE INDEX IDX_PROJECT_ROLES_CODE ON ADMIN.PROJECT_ROLES(ROLE_CODE);

-- Remove the incorrect task records we inserted earlier
DELETE FROM ADMIN.TASKS WHERE TITLE LIKE 'REFERENCE_STATUS_%';

COMMIT;

--rollback DELETE FROM ADMIN.PROJECT_ROLES;
--rollback DELETE FROM ADMIN.PRIORITY;
--rollback DELETE FROM ADMIN.TASK_STATUS;
--rollback DROP INDEX IDX_PROJECT_ROLES_CODE;
--rollback DROP INDEX IDX_PRIORITY_CODE;
--rollback DROP INDEX IDX_TASK_STATUS_CODE;
--rollback DROP TABLE ADMIN.PROJECT_ROLES;
--rollback DROP TABLE ADMIN.PRIORITY;
--rollback DROP TABLE ADMIN.TASK_STATUS;

--liquibase formatted sql

--changeset admin:002-schema-improvements
--comment: Fix data type inconsistencies and add audit columns for better tracking

-- Fix PROJECT_MEMBERS table issues
-- 1. The primary key should be a composite key or separate ID
-- 2. USERID should be VARCHAR2(50) to match USERS.USERID, not RAW(16)
-- 3. Add audit columns for tracking

-- First, drop the existing constraints to recreate the table properly
-- Note: Replace these constraint names with actual names from your database
-- ALTER TABLE ADMIN.PROJECT_MEMBERS DROP CONSTRAINT FK_PM_PROJECT_OLD;
-- ALTER TABLE ADMIN.PROJECT_MEMBERS DROP CONSTRAINT FK_PM_TEAM_OLD;
-- ALTER TABLE ADMIN.PROJECT_MEMBERS DROP CONSTRAINT FK_PM_USER_OLD;
-- ALTER TABLE ADMIN.PROJECT_MEMBERS DROP PRIMARY KEY;

-- Drop and recreate PROJECT_MEMBERS with correct data types
DROP TABLE ADMIN.PROJECT_MEMBERS;

CREATE TABLE ADMIN.PROJECT_MEMBERS 
    ( 
     MEMBERID    RAW(16) DEFAULT SYS_GUID(),
     PROJECTID   RAW(16) NOT NULL, 
     TEAMID      RAW(16) NOT NULL, 
     USERID      VARCHAR2(50) NOT NULL, 
     ROLE        VARCHAR2(255),
     CREATED_DATE DATE DEFAULT SYSDATE,
     CREATED_BY  VARCHAR2(50),
     UPDATED_DATE DATE DEFAULT SYSDATE,
     UPDATED_BY  VARCHAR2(50)
    ) 
    TABLESPACE DATA 
    LOGGING 
;

-- Add proper primary key
ALTER TABLE ADMIN.PROJECT_MEMBERS 
    ADD PRIMARY KEY (MEMBERID) 
    USING INDEX LOGGING ;

-- Add unique constraint to prevent duplicate assignments
ALTER TABLE ADMIN.PROJECT_MEMBERS 
    ADD CONSTRAINT UK_PROJECT_MEMBER_UNIQUE 
    UNIQUE (PROJECTID, USERID)
    USING INDEX LOGGING ;

-- Recreate foreign keys with proper references
ALTER TABLE ADMIN.PROJECT_MEMBERS 
    ADD CONSTRAINT FK_PM_PROJECT
    FOREIGN KEY (PROJECTID) 
    REFERENCES ADMIN.PROJECTS (PROJECTID) 
    NOT DEFERRABLE ;

ALTER TABLE ADMIN.PROJECT_MEMBERS 
    ADD CONSTRAINT FK_PM_TEAM
    FOREIGN KEY (TEAMID) 
    REFERENCES ADMIN.TEAM (TEAMID) 
    NOT DEFERRABLE ;

ALTER TABLE ADMIN.PROJECT_MEMBERS 
    ADD CONSTRAINT FK_PM_USER
    FOREIGN KEY (USERID) 
    REFERENCES ADMIN.USERS (USERID) 
    NOT DEFERRABLE ;

-- Add audit columns to existing tables
-- Add audit columns to USERS table
ALTER TABLE ADMIN.USERS ADD (
    CREATED_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATED_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    IS_ACTIVE CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y','N'))
);

-- Add audit columns to TEAM table  
ALTER TABLE ADMIN.TEAM ADD (
    CREATED_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATED_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    IS_ACTIVE CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y','N'))
);

-- Add audit columns to PROJECTS table
ALTER TABLE ADMIN.PROJECTS ADD (
    CREATED_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATED_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    IS_ACTIVE CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y','N')),
    PROJECT_STATUS VARCHAR2(50) DEFAULT 'PLANNING'
);

-- Add audit columns to SPRINTS table
ALTER TABLE ADMIN.SPRINTS ADD (
    CREATED_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATED_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    IS_ACTIVE CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y','N')),
    SPRINT_STATUS VARCHAR2(50) DEFAULT 'PLANNED'
);

-- Add audit columns to TASKS table
ALTER TABLE ADMIN.TASKS ADD (
    CREATED_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATED_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    IS_ACTIVE CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y','N')),
    PRIORITY VARCHAR2(20) DEFAULT 'MEDIUM',
    TASK_TYPE VARCHAR2(50) DEFAULT 'TASK'
);

-- Create indexes for better performance
CREATE INDEX IDX_PM_PROJECT ON ADMIN.PROJECT_MEMBERS(PROJECTID);
CREATE INDEX IDX_PM_USER ON ADMIN.PROJECT_MEMBERS(USERID);
CREATE INDEX IDX_PM_TEAM ON ADMIN.PROJECT_MEMBERS(TEAMID);
CREATE INDEX IDX_USERS_EMAIL ON ADMIN.USERS(EMAIL);
CREATE INDEX IDX_USERS_ACTIVE ON ADMIN.USERS(IS_ACTIVE);
CREATE INDEX IDX_TASKS_STATUS ON ADMIN.TASKS(STATUS);
CREATE INDEX IDX_TASKS_ASSIGNEE ON ADMIN.TASKS(ASSIGNEE);
CREATE INDEX IDX_TASKS_PRIORITY ON ADMIN.TASKS(PRIORITY);

--rollback DROP INDEX IDX_TASKS_PRIORITY;
--rollback DROP INDEX IDX_TASKS_ASSIGNEE;
--rollback DROP INDEX IDX_TASKS_STATUS;
--rollback DROP INDEX IDX_USERS_ACTIVE;
--rollback DROP INDEX IDX_USERS_EMAIL;
--rollback DROP INDEX IDX_PM_TEAM;
--rollback DROP INDEX IDX_PM_USER;
--rollback DROP INDEX IDX_PM_PROJECT;
--rollback ALTER TABLE ADMIN.TASKS DROP (TASK_TYPE, PRIORITY, IS_ACTIVE, UPDATED_BY, UPDATED_DATE, CREATED_BY, CREATED_DATE);
--rollback ALTER TABLE ADMIN.SPRINTS DROP (SPRINT_STATUS, IS_ACTIVE, UPDATED_BY, UPDATED_DATE, CREATED_BY, CREATED_DATE);
--rollback ALTER TABLE ADMIN.PROJECTS DROP (PROJECT_STATUS, IS_ACTIVE, UPDATED_BY, UPDATED_DATE, CREATED_BY, CREATED_DATE);
--rollback ALTER TABLE ADMIN.TEAM DROP (IS_ACTIVE, UPDATED_BY, UPDATED_DATE, CREATED_BY, CREATED_DATE);
--rollback ALTER TABLE ADMIN.USERS DROP (IS_ACTIVE, UPDATED_BY, UPDATED_DATE, CREATED_BY, CREATED_DATE);
